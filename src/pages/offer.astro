---
import Layout from "@layouts/Layout.astro";
import DropdownCard from "@components/Card/DropdownCard.astro";
import { offerContentLinkColors } from "@root/uno.config";
import { type App } from "@src/env";
import LinkButton from "@components/LinkButton.astro";
import { t } from "i18next";
import { getRelativeLocaleUrl } from "astro:i18n";

const { locale } = Astro.locals as App.Locals;
---

<style>
  .back-button {
    max-width: fit-content;
  }
</style>

<script>
  import { stagger, spring, timeline, type TimelineDefinition } from "motion";
  import { loaderAnimation } from "@lib/constants";

  const cards = document.querySelectorAll(".card");

  const sequence = [
    loaderAnimation,
    [
      cards,
      { y: ["40%", "0%"], opacity: [0, 1] },
      {
        at: "-0.1",
        duration: 0.4,
        delay: stagger(0.3),
        easing: spring({ velocity: 100, stiffness: 50, damping: 10 }),
      },
    ],
  ];

  timeline(sequence as TimelineDefinition);
</script>

<Layout
  title="Kito Danylo - Personal Trainer"
  description="Hi, ich bin Kito Danylo, dein Personal Trainer!"
>
  <div class="max-w-5xl flex flex-col md:max-h-dvh md:p-8">
    <div
      class="flex-basis-none pb-2 flex-grow-0 grid gap-2 grid-rows-1 grid-columns-1 grid-items-center md:grid-content-start w-full"
    >
      <LinkButton link={getRelativeLocaleUrl(locale, "/")}
        >{t("back")}</LinkButton
      >
    </div>
    <main
      class="overflow-hidden relative w-full h-auto m-auto grid gap-2 grid-items-center sm:gap-2 md:h-screen md:grid-rows-8 md:grid-cols-3 md:gap-4"
    >
      <DropdownCard
        colSpan="md:col-span-1"
        rowSpan="md:row-span-4"
        borderColor={`border-${offerContentLinkColors[0]}`}
        title={t("offerPage.athletics.title")}
      >
        <div class="flex flex-col gap-4 text-sm">
          <p>
            {t("offerPage.athletics.text1")}
          </p>
          <p>
            {t("offerPage.athletics.text2")}
          </p>
        </div>
      </DropdownCard>
      <div class="md:col-span-1 md:row-span-2 hidden md:block"></div>
      <DropdownCard
        colSpan="md:col-span-1"
        rowSpan="md:row-span-4"
        borderColor={`border-${offerContentLinkColors[1]}`}
        title={t("offerPage.yoga.title")}
      >
        <div class="flex flex-col gap-4 text-sm">
          <p>
            {t("offerPage.yoga.text1")}
          </p>
          <p>{t("offerPage.yoga.text2")}</p>
        </div>
      </DropdownCard>
      <DropdownCard
        colSpan="md:col-span-1"
        rowSpan="md:row-span-4"
        initialOpen={true}
        middle={true}
        title={t("offerPage.allTogether.title")}
      >
        <div class="flex flex-col gap-4 text-sm">
          <p>
            {t("offerPage.allTogether.text1")}
          </p>
          <p>
            {t("offerPage.allTogether.text2")}
          </p>
        </div>
      </DropdownCard>
      <DropdownCard
        colSpan="md:col-span-1"
        rowSpan="md:row-span-4"
        title={t("offerPage.nutrition.title")}
        borderColor={`border-${offerContentLinkColors[2]}`}
      >
        <div class="flex flex-col gap-4 text-sm">
          <p>
            {t("offerPage.nutrition.text1")}
          </p>
          <p>
            {t("offerPage.nutrition.text2")}
          </p>
        </div>
      </DropdownCard>
      <DropdownCard
        colSpan="md:col-span-1"
        rowSpan="md:row-span-4"
        borderColor={`border-${offerContentLinkColors[3]}`}
        title={t("offerPage.movement.title")}
      >
        <div class="flex flex-col gap-4 text-sm">
          <p>{t("offerPage.movement.text1")}</p>
          <p>{t("offerPage.movement.text2")}</p>
        </div>
      </DropdownCard>
    </main>
  </div>
</Layout>
